# Generated by Django 3.2.14 on 2022-08-22 13:18

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import modelcluster.fields
import uuid
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0066_collection_management_permissions'),
        ('library', '0003_noop_through_m2mfields'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessCategorySnippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(help_text='A topic for the library, can intersect with other topics', max_length=255, verbose_name='topic name')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='BusinessIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='full title')), ('paragraph', wagtail.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock())], blank=True, help_text='The main contents of the page', verbose_name='body')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BusinessPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('organization_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='organization type')),
                ('country_jurisdiction', django_countries.fields.CountryField(blank=True, default='', help_text="Home country/jurisdiction of the organization (where it's registered)", max_length=2, verbose_name='country')),
                ('city_jurisdiction', models.CharField(blank=True, help_text="Home city/jurisdiction of the organization (where it's registered)", max_length=512, null=True, verbose_name='city')),
                ('branches', wagtail.fields.RichTextField(blank=True, help_text='Use this to name other brands or country offices owned by the same company. This text is free-form for now and until there is a desired data model for mapping branches.', verbose_name='Branches (subsidiaries)')),
                ('about', wagtail.fields.RichTextField(blank=True)),
                ('eu_border_contribution', wagtail.fields.RichTextField(blank=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('authors', models.CharField(blank=True, max_length=1024, null=True, verbose_name='authors')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='IndustrySnippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(help_text='A topic for the library, can intersect with other topics', max_length=255, verbose_name='topic name')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='BusinessPageSourceSnippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('title', models.CharField(max_length=100, verbose_name='Stage Name')),
                ('url', models.URLField(blank=True, max_length=512, null=True, verbose_name='URL')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
                ('page_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.page', verbose_name='Internal page')),
            ],
            options={
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='BusinessPageRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='businespage_regions', to='library.businesspage')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businesses', to='library.regionsnippet')),
            ],
            options={
                'unique_together': {('page', 'region')},
            },
        ),
        migrations.CreateModel(
            name='BusinessPageIndustry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businesses', to='library.industrysnippet')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='businespage_industries', to='library.businesspage')),
            ],
            options={
                'unique_together': {('page', 'industry')},
            },
        ),
        migrations.CreateModel(
            name='BusinessPageBusinessPageSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('businesspage_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businesses', to='library.businesspagesourcesnippet')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='businespage_sources', to='library.businesspage')),
            ],
            options={
                'unique_together': {('page', 'businesspage_source')},
            },
        ),
        migrations.CreateModel(
            name='BusinessPageBusinessCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businesses', to='library.businesscategorysnippet')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='businespage_categories', to='library.businesspage')),
            ],
            options={
                'unique_together': {('page', 'business_category')},
            },
        ),
        migrations.AddField(
            model_name='businesspage',
            name='business_categories',
            field=models.ManyToManyField(blank=True, through='library.BusinessPageBusinessCategory', to='library.BusinessCategorySnippet'),
        ),
        migrations.AddField(
            model_name='businesspage',
            name='industries',
            field=models.ManyToManyField(blank=True, through='library.BusinessPageIndustry', to='library.IndustrySnippet'),
        ),
        migrations.AddField(
            model_name='businesspage',
            name='regions',
            field=models.ManyToManyField(blank=True, through='library.BusinessPageRegion', to='library.RegionSnippet'),
        ),
        migrations.AddField(
            model_name='businesspage',
            name='sources',
            field=models.ManyToManyField(blank=True, through='library.BusinessPageBusinessPageSource', to='library.BusinessPageSourceSnippet'),
        ),
    ]
